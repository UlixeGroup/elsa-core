name: Build and Publish Elsa Packages
on:
  workflow_dispatch:
  push:
    branches:
      - 2.x
  pull_request:
    branches:
      - 2.x
  release:
    types: [published]

env:
  NODE_OPTIONS: --max-old-space-size=4096
  ELSA_VERSION: 2.14.1-1

jobs:
  build_and_pack:
    name: Build and Pack Elsa
    runs-on: ubuntu-latest

    steps:

      - name: Set release VERSION variable
        run: echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v1
      
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.12.1
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      
      - run: echo $VERSION
      - run: node --version
      - run: npm --version

      - name: Build Designer
        working-directory: ./src/designer/elsa-workflows-studio
        run: |
          npm install --force
          npm version $VERSION --allow-same-version
          npm run build
      
      - name: Build Bindings
        working-directory: ./src/designer/bindings/aspnet/Elsa.Designer.Components.Web
        run: |
          npm install --force
          npm install -g webpack
          npm install -g webpack-cli
          npm run build
      
      - name: Build Elsa
        run: dotnet build --configuration Release /p:Version=$VERSION

      - name: Run Tests
        run: dotnet test --configuration Release --no-build --no-restore

      - name: Pack Elsa
        run: dotnet pack --configuration Release /p:Version=$VERSION /p:PackageOutputPath=$(pwd)/out 

      - name: Upload Elsa Artifact
        uses: actions/upload-artifact@v3
        with:
          name: elsa-nuget-package
          path: out/*nupkg

  publish_nuget_release:
    name: Publish to Nuget
    needs: build_and_pack
    runs-on: ubuntu-latest
    steps:
      - name: Download Nuget Packages
        uses: actions/download-artifact@v3
        with:
          name: elsa-nuget-package
      
      - name: Publish Nuget Packages to MyGet
        run: dotnet nuget push *.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json --skip-duplicate
